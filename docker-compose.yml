version: '3'
name: courses-app
services:
  eureka-service:
    container_name: eureka-service
    build: ./backend/msvc-registry
    image: ksprwhite/crudcursos:eureka-service
    restart: always
    ports:
    - "8004:8004"
    environment:
      - eureka.instance.hostname=eureka-service
    develop:
      watch:
        - action: sync+restart
          path: ./backend/msvc-registry/release/application.jar
          target: /app/application.jar
    healthcheck:
      test: "curl --fail --silent localhost:8004/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 15
      start_period: 2s
  auth-service:
    container_name: auth-service
    build: ./backend/msvc-auth
    image: ksprwhite/crudcursos:auth-service
    restart: always
    ports:
    - "8003:8003"
    depends_on:
      eureka-service:
        condition: service_healthy
      database-postgres-auth:
        condition: service_healthy
    environment:
      - spring.datasource.url=jdbc:postgresql://database-postgres-auth:5432/msvc-auth
      - keycloak.connectionsJpa.url=jdbc:postgresql://database-postgres-auth:5432/msvc-auth
      - spring.liquibase.enabled=false
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_IMPORT_FILE=/app/default-realm.json
    develop:
      watch:
        - action: sync+restart
          path: ./backend/msvc-auth/release/application.jar
          target: /app/application.jar
    healthcheck:
      test: "curl --fail --silent localhost:8003/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 15
      start_period: 2s
  gateway-service:
    container_name: gateway-service
    build: ./backend/msvc-gateway
    image: ksprwhite/crudcursos:gateway-service
    restart: always
    ports:
    - "8000:8000"
    depends_on:
      eureka-service:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8003
      - EUREKA_SERVICE_URL=http://eureka-service:8004
    develop:
      watch:
        - action: sync+restart
          path: ./backend/msvc-gateway/release/application.jar
          target: /app/application.jar
    healthcheck:
      test: "curl --fail --silent localhost:8000/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 15
      start_period: 2s
  courses-service:
    container_name: courses-service
    build: ./backend/msvc-courses
    image: ksprwhite/crudcursos:courses-service
    restart: always
    ports:
    - "8002:8002"
    depends_on:
      gateway-service:
        condition: service_healthy
      database-postgres:
        condition: service_healthy
    environment:
      - spring.datasource.url=jdbc:postgresql://database-postgres:5432/msvc-courses
      - feign.url.user-service=http://users-service:8001
      - KEYCLOAK_ISSUER_URI="http://${KEYCLOAK_HOSTNAME}:8003/auth/realms/SpringBootKeycloak"
      - EUREKA_URL=http://eureka-service:8004/eureka/
    develop:
      watch:
        - action: sync+restart
          path: ./backend/msvc-courses/release/application.jar
          target: /app/application.jar
    healthcheck:
      test: "curl --fail --silent localhost:8002/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 25
      start_period: 2s
  users-service:
    container_name: users-service
    build: ./backend/msvc-users
    image: ksprwhite/crudcursos:users-service
    restart: always
    ports:
    - "8001:8001"
    depends_on:
      gateway-service:
        condition: service_healthy
      database-mysql:
        condition: service_healthy
    environment:
      - spring.datasource.url=jdbc:mysql://database-mysql:3306/msvc-users
      - feign.url.courses-service=http://courses-service:8002
      - KEYCLOAK_ISSUER_URI="http://${KEYCLOAK_HOSTNAME}:8003/auth/realms/SpringBootKeycloak"
      - EUREKA_URL=http://eureka-service:8004/eureka/
    develop:
      watch:
        - action: sync+restart
          path: ./backend/msvc-users/release/application.jar
          target: /app/application.jar
    healthcheck:
      test: "curl --fail --silent localhost:8001/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 25
      start_period: 2s
  webapp:
    container_name: courses-webapp
    build: ./frontend
    image: ksprwhite/crudcursos:webapp
    ports:
    - "80:80"
    depends_on:
      courses-service:
        condition: service_healthy
      users-service:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./frontend/src
          target: /app/src
    environment:
      - USERS_SERVICE_ENDPOINT=http://localhost:8001
      - COURSES_SERVICE_ENDPOINT=http://localhost:8002
      - GATEWAY_ENDPOINT="http://${GATEWAY_HOSTNAME}:8000"
      - KEYCLOAK_URL="http://${KEYCLOAK_HOSTNAME}:8003/auth"
      - KEYCLOAK_REALM=SpringBootKeycloak
      - KEYCLOAK_CLIENT_ID=courses-app
    healthcheck:
          test: [ "CMD", "curl", "--fail", "-G", "http://localhost:4200" ]
          interval: 2s
          timeout: 3s
          retries: 30
          start_period: 10s
  database-mysql:
    container_name: database-mysql
    image: "mysql:latest"
    ports:
    - "3307:3306"
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=msvc-users
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 2s
  database-postgres:
    container_name: database-postgres
    image: "postgres:latest"
    ports:
    - "5433:5432"
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=msvc-courses
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 2s
  database-postgres-auth:
    container_name: database-postgres-auth
    image: "postgres:latest"
    ports:
    - "5434:5432"
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=msvc-auth
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 2s